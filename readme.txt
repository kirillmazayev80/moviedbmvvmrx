	FilmTest
	
	Swift 5.0; iOS 12.4; Xcode 10.3

	Description
	
	This project is viewer of movies from site "The Movie DataBase (TMDb)" open API (https://www.themoviedb.org).
	It has developed for iOS 12.4, for iPhone devices and portrait orientation.
	It has written on Swift 5.0 language (Xcode 10.3) with implementation MVVM (Model ViewModel View) architecture. For data binding itâ€™s using reactive programming paradigm, which uses RxCocoa and RxSwift third party libraries. For local database organization it has selected RealmSwift framework. It has provided easy and safely storing data, and has widely using in modern applications. For working with downloading information of movies from server it has used network abstraction layer Moya with Alamofire and RxSwift extensions, and also SDWebImage framework for caching images in phone memory. It has used RxBiBinding and RxGesture libraries for better binding. Also in this project there is an implementing Coordinator pattern for navigation between view controllers, customization of tab bar, favorite movies gallery, feed movie cells, providing a technique for separating functionality via protocols, generics & extensions. It has implemented a pagination end error handling to interact with server.The views have divided on separate storyboards and using auto layouts for all screen sizes.
	This application has five screens - most viewed movies (central custom button), search movies, favorites movies, actors feed and settings. It can select on bottom tab bar item.
	The main screen has displayed feed of most viewed movies, which have downloaded by 20 per one request. It has two tabs: all most viewed movies and most viewed movies by genre, which the user can select in settings screen. The movies cell contains movie image, title and short description. The movies feed has pull request mechanism for updating. By tapping on movie cell the app transfer on movie overview screen. It has movie's image, the title, releasing date, vote count & vote average, popularity, budget, original language and description. By tapping on image it converts to full screen movie's poster. By next tap the image has returned on its primary size. Also the user can add the movie in favorites by clicking on green button in right bottom corner, and the app will inform that the movie has added successfully. After that action the adding button hides, and removing red button will appear in top left corner. If the user want to remove the movie from favorites, he should to click this red button and the movie will remove, the app will inform the user about success removing, removing red button will hide and add green button will appear again.
	On search screen the user can find movie by title or some prefix letters of it (more than 3). The movies will suggested automatically and results updates if the request is changing. If the user tap cancel button, the query string will clear. If there is tapping on clear button, the query string will clear, but results of finding are remaining. By tapping on movie cell the user will transfer on movie overview screen, and can using all functionality.
	The favorites screen is displaying all movies, which the user has added and saved it in local app database. This screen has horizontal gallery of favorite movies, three tabs for sorting movies by title, by release date & by rate. By clicking on movie cell the user will transfer on overview movie screen. The user can add and remove movie from favorites by clicking on proper buttons on overview movie screen. The gallery has horizontal scrolling for review all favorites.
	Actors screen is displaying all popular actors. The actor cell has an actor's portrait, name and surname. By tapping on actor's cell the app will transfer on actor's biography screen. It contains actor's portrait, name, surname, date & place of birth, popularity, home page and biography. If home page exists, the user can follow the link of actor's homepage to visit it in browser.
	The app settings screen has two sections: the theme of application (light & dark), selected genre of most viewed movies. In this sections the user can choose required settings. The default settings are light theme and action genre.
	If the internet connection has disconnected or request error has occured, the application will inform user. 
	This app has localized on Russian language.
 	You can see few screenshots in Screenshots project directory.
